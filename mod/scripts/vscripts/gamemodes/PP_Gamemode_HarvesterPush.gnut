#if SERVER
global function PP_GameMode_HarvesterPush_init
global function Harvesterpush_GetHarvesterOfTeam
global function HarvesterSpawn
#endif
global function PP_HarvesterPush_init
void function PP_HarvesterPush_init()
{
    AddPrivateMatchModeSettingEnum("#MODE_SETTING_CATEGORY_HARVESTERPUSH", "HarvesterPush", ["#SETTING_DISABLED", "#SETTING_ENABLED"], "0")
    AddPrivateMatchModeSettingArbitrary("#MODE_SETTING_CATEGORY_HARVESTERPUSH", "Harvester_health", "5000")
    AddPrivateMatchModeSettingEnum("#MODE_SETTING_CATEGORY_HARVESTERPUSH", "Turrets", ["#SETTING_DISABLED", "#SETTING_ENABLED"], "0")
}
#if SERVER
int initialplayercount
void function PP_GameMode_HarvesterPush_init()
{
    GamemodeHarvesterPush_Init()
	//ScoreEvent_SetupEarnMeterValuesForMixedModes()
	SetTimeoutWinnerDecisionFunc( CheckScoreForDraw )
    AddCallback_GameStateEnter( eGameState.Playing, OnStart )
    ClassicMP_ForceDisableEpilogue( true )
    RegisterSignal( "OnHarvesterDamaged" )
    SetSpawnpointGamemodeOverride( ATTRITION ) // use bounty hunt spawns as vanilla game has no spawns explicitly defined for aitdm
    AddCallback_OnPlayerRespawned(Respawn)
}
void function Respawn(entity player)
{
    vector dif = <RandomFloatRange(50, 500), RandomFloatRange(50, 500), 500>
    if(RandomInt(2) == 2)
        dif.x = dif.x*-1 
    if(RandomInt(2) == 2)
        dif.y = dif.y*-1 
    player.SetOrigin(OriginToGround( HarvesterSpawn(player.GetTeam()) + dif ))
}
int function HarvesterHealth()
{
    return initialplayercount * (GetCurrentPlaylistVarInt("Harvester_health", 5000))
}
entity IMCHarvester
entity MilitiaHarvester
int function CheckScoreForDraw()
{
	if ( GameRules_GetTeamScore( TEAM_IMC ) > GameRules_GetTeamScore( TEAM_MILITIA ) )
		return TEAM_IMC
	else if ( GameRules_GetTeamScore( TEAM_MILITIA ) > GameRules_GetTeamScore( TEAM_IMC ) )
		return TEAM_MILITIA

	return TEAM_UNASSIGNED
}
void function OnStart()
{
    initialplayercount = GetPlayerArray().len()
    CreateHarvester(TEAM_IMC)
    CreateHarvester(TEAM_MILITIA)
    //if(GetCurrentPlaylistVarInt("Turrets", 0) == 1)
    //    CreateTurrets()
    GameRules_SetTeamScore(TEAM_IMC, HarvesterHealth() )
    GameRules_SetTeamScore(TEAM_MILITIA, HarvesterHealth())
}
vector function HarvesterSpawn(int faction)
{
    switch(GetMapName())
    {
        case "mp_grave":
            if(faction == TEAM_MILITIA)
                return < -2095.63, -6398.55, 2007.82>
            if(faction == TEAM_IMC)
                return <10011.9, -2631.74, 1983.93>
        case "mp_forwardbase_kodai":
            if(faction == TEAM_MILITIA)
                return < -2671.81, -3190.73, 808.011>
            if(faction == TEAM_IMC)
                return <2926.22, 4521.36, 951.901>
        case "mp_homestead":
            if(faction == TEAM_MILITIA)
                return < -3659.06, -3302.12, -132.8>
            if(faction == TEAM_IMC)
                return <4888.3, 2406.64, -7.65577>
        case "mp_thaw":
            if(faction == TEAM_MILITIA)
                return < -2253.96, -1792.2, -441.865>
            if(faction == TEAM_IMC)
                return <3585.88, -1165.69, -397.739>
        case "mp_black_water_canal":
            if(faction == TEAM_MILITIA)
                return <4185.43, -4163.5, -384.334>
            if(faction == TEAM_IMC)
                return <184.474, 4710.04, -259.684>
        case "mp_eden":
            if(faction == TEAM_MILITIA)
                return < -2886.93, 3281.42, 183.178>
            if(faction == TEAM_IMC)
                return <5166.67, -556.965, 65.3856>
        case "mp_drydock":
            if(faction == TEAM_IMC)
                return  < 361.064, 2761.95, 75.6206>
            if(faction == TEAM_MILITIA)
                return <86.0857, -3310.51, 121.475>

        case "mp_crashsite3":
            if(faction == TEAM_MILITIA)
                return < -8654.2, -2276.57, 688.617>
            if(faction == TEAM_IMC)
                return < -2982.09, 758.406, 538.314>
        case "mp_complex3":
            if(faction == TEAM_IMC)
                return < -1250.14, 274.873, 520.031>
            if(faction == TEAM_MILITIA)
                return < -7807.6, -742.319, 576.031>
        case "mp_angel_city":
            if(faction == TEAM_IMC)
                return <3713.02, -2010.57, 200.031>
            if(faction == TEAM_MILITIA)
                return < -3959.31, 5090.34, 53.0326>
        case "mp_thaw":
            if(faction == TEAM_IMC)
                return < -2253.96, -1792.2, -441.865>
            if(faction == TEAM_MILITIA)
                return <3585.88, -1165.69, -397.739>
        case "mp_colony02":
            if(faction == TEAM_MILITIA)
                return <2520.25, 4328.48, 45.9353>
            if(faction == TEAM_IMC)
                return < -3690.07, -2561.87, 130.734>
        case "mp_glitch":
            if(faction == TEAM_IMC)
                return < -3938.93, 388.643, 16.3832>
            if(faction == TEAM_MILITIA)
                return <3452.95, -73.5616, 17.1179>
        case "mp_rise":
            if(faction == TEAM_IMC)
                return  <3113.88, 3252.98, 26.0435>
            if(faction == TEAM_MILITIA)
                return < -4600.35, -370.299, 384.031>
        case "mp_wargames":
            if(faction == TEAM_IMC)
                return <733.18, -3161.25, -127.969>
            if(faction == TEAM_MILITIA)
                return < -4465.59, 2250.65, -91.7064>
        case "mp_relic02":
            if(faction == TEAM_IMC)
                return  < -5330.51, -2909.03, 296.389>
            if(faction == TEAM_MILITIA)
                return <5461.16, -4804.2, 98.1662>
    }
    unreachable
}
//vector ornull function TurretSpawn(int faction)
//{
//    switch(GetMapName())
//    {
//        case "mp_grave":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_forwardbase_kodai":
//            if(faction == TEAM_MILITIA)
//                return < -2265.24, -2337.53, 802.571>
//            if(faction == TEAM_IMC)
//                return <2336.53, 4331.89, 971.188>
//        case "mp_homestead":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_thaw":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_black_water_canal":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_eden":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_drydock":
//            if(faction == TEAM_IMC)
//                return  
//            if(faction == TEAM_MILITIA)
//                return 
//
//        case "mp_crashsite3":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_complex3":
//            if(faction == TEAM_IMC)
//                return 
//            if(faction == TEAM_MILITIA)
//                return 
//        case "mp_angel_city":
//            if(faction == TEAM_IMC)
//                return 
//            if(faction == TEAM_MILITIA)
//                return 
//        case "mp_thaw":
//            if(faction == TEAM_IMC)
//                return 
//            if(faction == TEAM_MILITIA)
//                return 
//        case "mp_colony02":
//            if(faction == TEAM_MILITIA)
//                return 
//            if(faction == TEAM_IMC)
//                return 
//        case "mp_glitch":
//            if(faction == TEAM_IMC)
//                return 
//            if(faction == TEAM_MILITIA)
//                return 
//        case "mp_rise":
//            if(faction == TEAM_IMC)
//                return  
//            if(faction == TEAM_MILITIA)
//                return 
//        case "mp_wargames":
//            if(faction == TEAM_IMC)
//                return 
//            if(faction == TEAM_MILITIA)
//                return 
//        case "mp_relic02":
//            if(faction == TEAM_IMC)
//                return  
//            if(faction == TEAM_MILITIA)
//                return 
//    }
//}
entity function Harvesterpush_GetHarvesterOfTeam(int faction)
{
    if(faction == TEAM_IMC)
        return IMCHarvester
    if(faction == TEAM_MILITIA)
        return MilitiaHarvester
    unreachable
}
void function CreateHarvester(int faction)
{
    entity Harvester = CreateEntity("prop_dynamic")
    Harvester.SetValueForModelKey($"models/props/generator_coop/generator_coop.mdl")
    Harvester.kv.health = HarvesterHealth()
    Harvester.kv.max_health = HarvesterHealth()
    Harvester.SetAngles(<0,0,0>)
    Harvester.SetOrigin(HarvesterSpawn(faction))
    Harvester.kv.solid = SOLID_VPHYSICS
    Harvester.SetTakeDamageType( DAMAGE_YES )
    SetTeam(Harvester, faction)
    entity Shield = CreateShieldWithSettings(HarvesterSpawn(faction), <0,0,0>,200,500,360,999999,1500, FX_HARVESTER_OVERSHIELD )
    SetTeam( Shield, faction)
    DispatchSpawn(Harvester)
    Highlight_SetEnemyHighlight( Harvester, "hunted_enemy" )
    Highlight_SetFriendlyHighlight( Harvester, "hunted_friendly" )
    AddEntityCallback_OnDamaged(Harvester, OnShieldDamaged)
    Harvester.EnableAttackableByAI( 10, 0, AI_AP_FLAG_NONE )
    AI_CreateDangerousArea_Static( Harvester, Harvester, 250, TEAM_INVALID, true, true, HarvesterSpawn(faction) )
}
void function OnShieldDamaged(entity shield, var damageInfo)
{
    entity attacker = DamageInfo_GetAttacker( damageInfo )
    if(DamageInfo_GetDamageSourceIdentifier( damageInfo ) == eDamageSourceId.mp_titancore_laser_cannon || DamageInfo_GetDamageSourceIdentifier( damageInfo ) == eDamageSourceId.mp_titanability_slow_trap)
        DamageInfo_SetDamage( damageInfo, DamageInfo_GetDamage( damageInfo )/10 )
        
    float damageAmount = DamageInfo_GetDamage( damageInfo ) 
    if(attacker.IsPlayer())
        attacker.NotifyDidDamage( shield, DamageInfo_GetHitBox( damageInfo ), DamageInfo_GetDamagePosition( damageInfo ), DamageInfo_GetCustomDamageType( damageInfo ), DamageInfo_GetDamage( damageInfo ), DamageInfo_GetDamageFlags( damageInfo ), DamageInfo_GetHitGroup( damageInfo ), DamageInfo_GetWeapon( damageInfo ), DamageInfo_GetDistFromAttackOrigin( damageInfo ) )

    GameRules_SetTeamScore( shield.GetTeam(),GameRules_GetTeamScore(shield.GetTeam()) - damageAmount )
    if(GameRules_GetTeamScore( shield.GetTeam()) <= 0)
        SetWinner( attacker.GetTeam() )
    else if(damageAmount > 50 || attacker.IsTitan())
        thread StartShieldRegen(shield)
}
void function StartShieldRegen(entity shield)
{
    shield.Signal("OnHarvesterDamaged")
    shield.EndSignal( "OnHarvesterDamaged" )
    if(GameRules_GetTeamScore( shield.GetTeam()) > HarvesterHealth()/5)
    {
        for(int x = 0; x<16; x++)
        {
            foreach(entity player in GetPlayerArrayOfTeam(shield.GetTeam()))
            {
                SendHudMessage( player, "Harvester damaged! Proximity repair possible in " + (15-x) + " Seconds", -1, 0.2, 255, 200, 200, 255, 0, 1, 0 )
            }
            wait 1
        }
        entity MiniShield = CreateShieldWithSettings(shield.GetOrigin(), <0,0,0>,200,500,360,999999,1500, FX_HARVESTER_OVERSHIELD )
        SetTeam( MiniShield, shield.GetTeam())
    }
    //else
    //{
    //    for(int x = 0; x<5; x++)
    //    {
    //        foreach(entity player in GetPlayerArrayOfTeam(shield.GetTeam()))
    //        {
    //            SendHudMessage( player, "Harvester damaged! Proximity repair possible in " + (4-x) + " Seconds", -1, 0.2, 255, 200, 200, 255, 0, 1, 0 )
    //        }
    //        wait 1
    //    }
    //}
    foreach(entity player in GetPlayerArrayOfTeam(shield.GetTeam()))
    {
        if(GameRules_GetTeamScore( shield.GetTeam()) > HarvesterHealth()/5)
            SendHudMessage( player, "Harvester damaged! Proximity repair is now possible!", -1, 0.2, 255, 200, 200, 255, 0.15, 10, 10 )
        else
            SendHudMessage( player, "Harvester heavily damaged! Emergency repair is now possible!", -1, 0.2, 255, 200, 200, 255, 0.15, 10, 10 )

    }

    while(true)
    {
        foreach (entity player in GetPlayerArrayOfTeam(shield.GetTeam()))
        {
                if(DistanceSqr( player.GetOrigin(), shield.GetOrigin() ) < 600 * 600)
                {
                    if(GameRules_GetTeamScore( shield.GetTeam()) < HarvesterHealth() && GameRules_GetTeamScore( shield.GetTeam()) > 0 && IsAlive(player))
                    {
                        if(player.IsTitan())
                        {
                            shield.kv.health = GameRules_GetTeamScore( shield.GetTeam()) + min(500, HarvesterHealth()-GameRules_GetTeamScore( shield.GetTeam()))
                            GameRules_SetTeamScore( shield.GetTeam(),GameRules_GetTeamScore(shield.GetTeam()) + min(500, HarvesterHealth()-GameRules_GetTeamScore( shield.GetTeam()) ))
                        }
                        else
                        {
                            shield.kv.health = GameRules_GetTeamScore( shield.GetTeam()) + min(100, HarvesterHealth()-GameRules_GetTeamScore( shield.GetTeam()))
                            GameRules_SetTeamScore( shield.GetTeam(),GameRules_GetTeamScore(shield.GetTeam()) + min(100, HarvesterHealth()-GameRules_GetTeamScore( shield.GetTeam()) ))
                        }
                        SendHudMessage( player, "You are repairing the harvester!", -1, 0.2, 255, 200, 200, 255, 0, 1, 0 )
                    }
            }
        }
        wait 1
    }
}

#endif